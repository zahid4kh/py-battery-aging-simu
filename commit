#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
GRAY='\033[0;90m'
NC='\033[0m'

print_header() {
    local title="$1"
    local width=60
    local padding=$(((width - ${#title} - 2) / 2))

    echo -e "${CYAN}╭$(printf '─%.0s' $(seq 1 $((width-2))))╮${NC}"
    printf "${CYAN}│${NC}%*s${WHITE}%s${NC}%*s${CYAN}│${NC}\n" $padding "" "$title" $padding ""
    echo -e "${CYAN}╰$(printf '─%.0s' $(seq 1 $((width-2))))╯${NC}"
}

print_section() {
    local title="$1"
    echo -e "\n${PURPLE}┌─ ${WHITE}$title${NC}"
}

print_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_info() {
    echo -e "${BLUE}ℹ️  $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

clear
print_header "🚀 Git Commit Assistant"

print_section "🔍 Repository Check"
if [ ! -d .git ]; then
    print_error "Not a git repository (no .git folder found)"
    echo -e "\n${GRAY}└─────────────────────────────────────────────────────────┘${NC}"
    exit 1
fi
print_success "Valid git repository detected"

print_section "📊 Change Detection"
if [[ -z $(git status -s) ]]; then
    print_info "No changes detected in the repository"
    echo -e "\n${GRAY}└─────────────────────────────────────────────────────────┘${NC}"
    exit 0
fi

print_section "📁 Changed Files"
echo -e "${GRAY}┌─────────────────────────────────────────────────────────┐${NC}"
git status --short | while IFS= read -r line; do
    status="${line:0:2}"
    file="${line:3}"
    case "$status" in
        "M ") echo -e "${GRAY}│${NC} ${YELLOW}📝 Modified:${NC}  $file" ;;
        "A ") echo -e "${GRAY}│${NC} ${GREEN}➕ Added:${NC}     $file" ;;
        "D ") echo -e "${GRAY}│${NC} ${RED}🗑️  Deleted:${NC}   $file" ;;
        "??") echo -e "${GRAY}│${NC} ${BLUE}🆕 Untracked:${NC} $file" ;;
        "R ") echo -e "${GRAY}│${NC} ${PURPLE}🔄 Renamed:${NC}   $file" ;;
        *) echo -e "${GRAY}│${NC} ${CYAN}📄 Changed:${NC}   $file" ;;
    esac
done
echo -e "${GRAY}└─────────────────────────────────────────────────────────┘${NC}"

print_section "📦 Staging Files"
git add .
if [ $? -ne 0 ]; then
    print_error "Failed to add files to staging"
    echo -e "\n${GRAY}└─────────────────────────────────────────────────────────┘${NC}"
    exit 1
fi
print_success "All files staged successfully"

print_section "💬 Commit Message"
echo -e "${GRAY}┌─────────────────────────────────────────────────────────┐${NC}"
echo -e "${GRAY}│${NC} ${WHITE}Enter your commit message:${NC}"
echo -e "${GRAY}└─────────────────────────────────────────────────────────┘${NC}"
echo -ne "${CYAN}📝 ${NC}"
read commit_message

if [ -z "$commit_message" ]; then
    print_error "Commit message cannot be empty"
    echo -e "\n${GRAY}└─────────────────────────────────────────────────────────┘${NC}"
    exit 1
fi

print_section "🎯 Committing Changes"
echo -e "${GRAY}┌─────────────────────────────────────────────────────────┐${NC}"
echo -e "${GRAY}│${NC} ${WHITE}Commit message:${NC} \"$commit_message\""
echo -e "${GRAY}└─────────────────────────────────────────────────────────┘${NC}"

git commit -m "$commit_message"
if [ $? -eq 0 ]; then
    echo -e "\n${GREEN}╭─────────────────────────────────────────────────────────╮${NC}"
    echo -e "${GREEN}│${NC}                   ${WHITE}🎉 SUCCESS! 🎉${NC}                     ${GREEN}│${NC}"
    echo -e "${GREEN}│${NC}            ${WHITE}Changes committed successfully${NC}            ${GREEN}│${NC}"
    echo -e "${GREEN}╰─────────────────────────────────────────────────────────╯${NC}"
else
    echo -e "\n${RED}╭─────────────────────────────────────────────────────────╮${NC}"
    echo -e "${RED}│${NC}                    ${WHITE}❌ FAILED ❌${NC}                      ${RED}│${NC}"
    echo -e "${RED}│${NC}              ${WHITE}Failed to commit changes${NC}              ${RED}│${NC}"
    echo -e "${RED}╰─────────────────────────────────────────────────────────╯${NC}"
    exit 1
fi

echo -e "\n${GRAY}Thank you for using Git Commit Assistant! 🚀${NC}\n"